// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SpaceDuck.KalamburyGame.DataBase;

namespace SpaceDuck.KalamburyGame.Migrations.ApplicationData
{
    [DbContext(typeof(ApplicationDataDbContext))]
    [Migration("20200421093859_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SpaceDuck.Common.Models.Ranking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("GameType")
                        .HasColumnType("int");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Rankings");
                });

            modelBuilder.Entity("SpaceDuck.Common.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("GameType")
                        .HasColumnType("int");

                    b.Property<bool>("IsFull")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("PlayerIdsFlat")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("RoomConfigurationid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoomConfigurationid")
                        .IsUnique();

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("SpaceDuck.Common.Models.RoomConfiguration", b =>
                {
                    b.Property<int>("RoomConfigurationid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("IsPrivate")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("NumberOfPlayers")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PlayerOwnerId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("RoundCount")
                        .HasColumnType("int");

                    b.Property<int>("RoundDuration")
                        .HasColumnType("int");

                    b.HasKey("RoomConfigurationid");

                    b.ToTable("RoomConfiguration");
                });

            modelBuilder.Entity("SpaceDuck.Common.Models.Room", b =>
                {
                    b.HasOne("SpaceDuck.Common.Models.RoomConfiguration", "RoomConfiguration")
                        .WithOne("Room")
                        .HasForeignKey("SpaceDuck.Common.Models.Room", "RoomConfigurationid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
